@using System.Drawing
@model Folferine.Website.Models.GameRoundViewModel

@{
    ViewBag.Title = "Round " + Model.Number;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal well">
        <h4 class="well-title">Round @Model.Number</h4>
            
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Number)

        @for (int i = 0; i < Model.PlayerScores.Count; i++)
        {
            <div class="form-group">
                @Html.HiddenFor(modelItem => Model.PlayerScores[i].UserName)
                @Html.Label(Model.PlayerScores[i].UserName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="btn-group" data-toggle="buttons">
                        @for (int x = 1; x < 11; x++)
                        {
                            <label class="btn btn-default @(Model.PlayerScores[i].Score == x ? "active" : "")">
                                @Html.RadioButtonFor(model => Model.PlayerScores[i].Score, x)@(x)
                            </label>
                        }
                    </div>
                    @Html.ValidationMessageFor(modelItem => Model.PlayerScores[i].Score)
                </div>
            </div>
        }

        @Html.ValidationSummary(true)
            
        <div class="well-footer">
            <input type="submit" value="Next" class="btn btn-primary" />
        </div>
        
    </div>
}
    
@Html.ActionLink("Back to details", "Details", new { id = @Model.Id }) 